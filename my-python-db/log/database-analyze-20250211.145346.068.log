[2025-02-11 14:53:46] This is codeql database analyze --format=csv --output=result.csv my-python-db C:\BEng\4th Year\Honours Project\GreenPythonLocal\codeql-custom-queries-python\example.ql
[2025-02-11 14:53:46] Log file was started late.
[2025-02-11 14:53:46] [PROGRESS] database analyze> Running queries.
[2025-02-11 14:53:46] Running plumbing command: codeql database run-queries --evaluator-log-level=5 --warnings=show --dynamic-join-order-mode=none --qlconfig-file=C:\BEng\4th Year\Honours Project\GreenPythonLocal\qlconfig.yml --no-rerun -- C:\BEng\4th Year\Honours Project\GreenPythonLocal\my-python-db C:\BEng\4th Year\Honours Project\GreenPythonLocal\codeql-custom-queries-python\example.ql
[2025-02-11 14:53:46] Calling plumbing command: codeql resolve ram --dataset=C:\BEng\4th Year\Honours Project\GreenPythonLocal\my-python-db\db-python --format=json
[2025-02-11 14:53:46] [PROGRESS] resolve ram> Stringpool size measured as 2154906
[2025-02-11 14:53:46] Plumbing command codeql resolve ram completed:
                      [
                        "-J-Xmx1800M",
                        "--off-heap-ram=1569"
                      ]
[2025-02-11 14:53:46] Spawning plumbing command: execute queries -J-Xmx1800M --off-heap-ram=1569 --verbosity=progress --logdir=C:\BEng\4th Year\Honours Project\GreenPythonLocal\my-python-db\log --evaluator-log-level=5 --warnings=show --dynamic-join-order-mode=none --qlconfig-file=C:\BEng\4th Year\Honours Project\GreenPythonLocal\qlconfig.yml --no-rerun --output=C:\BEng\4th Year\Honours Project\GreenPythonLocal\my-python-db\results -- C:\BEng\4th Year\Honours Project\GreenPythonLocal\my-python-db\db-python C:\BEng\4th Year\Honours Project\GreenPythonLocal\codeql-custom-queries-python\example.ql
[2025-02-11 14:53:50] Plumbing command codeql execute queries terminated with status 0.
[2025-02-11 14:53:50] Plumbing command codeql database run-queries completed with status 0.
[2025-02-11 14:53:50] [PROGRESS] database analyze> Interpreting results.
[2025-02-11 14:53:50] Running plumbing command: codeql database interpret-results --format=csv -o=C:\BEng\4th Year\Honours Project\GreenPythonLocal\result.csv --max-paths=4 --csv-location-format=line-column --print-diagnostics-summary --print-metrics-summary --qlconfig-file=C:\BEng\4th Year\Honours Project\GreenPythonLocal\qlconfig.yml -- C:\BEng\4th Year\Honours Project\GreenPythonLocal\my-python-db C:\BEng\4th Year\Honours Project\GreenPythonLocal\codeql-custom-queries-python\example.ql
[2025-02-11 14:53:50] Calling plumbing command: codeql resolve queries --qlconfig-file=C:\BEng\4th Year\Honours Project\GreenPythonLocal\qlconfig.yml --format=json -- C:\BEng\4th Year\Honours Project\GreenPythonLocal\codeql-custom-queries-python\example.ql
[2025-02-11 14:53:50] [PROGRESS] resolve queries> Recording pack reference getting-started/codeql-extra-queries-python at C:\BEng\4th Year\Honours Project\GreenPythonLocal\codeql-custom-queries-python.
[2025-02-11 14:53:50] Plumbing command codeql resolve queries completed:
                      [
                        "C:\\BEng\\4th Year\\Honours Project\\GreenPythonLocal\\codeql-custom-queries-python\\example.ql"
                      ]
[2025-02-11 14:53:50] Calling plumbing command: codeql resolve extensions --qlconfig-file=C:\BEng\4th Year\Honours Project\GreenPythonLocal\qlconfig.yml C:\BEng\4th Year\Honours Project\GreenPythonLocal\codeql-custom-queries-python\example.ql
[2025-02-11 14:53:50] Calling plumbing command: codeql resolve queries --qlconfig-file=C:\BEng\4th Year\Honours Project\GreenPythonLocal\qlconfig.yml --allow-library-packs --format startingpacks -- C:\BEng\4th Year\Honours Project\GreenPythonLocal\codeql-custom-queries-python\example.ql
[2025-02-11 14:53:50] [PROGRESS] resolve queries> Recording pack reference getting-started/codeql-extra-queries-python at C:\BEng\4th Year\Honours Project\GreenPythonLocal\codeql-custom-queries-python.
[2025-02-11 14:53:50] Plumbing command codeql resolve queries completed:
                      [
                        "C:\\BEng\\4th Year\\Honours Project\\GreenPythonLocal\\codeql-custom-queries-python"
                      ]
[2025-02-11 14:53:50] Calling plumbing command: codeql resolve extensions-by-pack --qlconfig-file=C:\BEng\4th Year\Honours Project\GreenPythonLocal\qlconfig.yml -- C:\BEng\4th Year\Honours Project\GreenPythonLocal\codeql-custom-queries-python
[2025-02-11 14:53:51] [SPAMMY] resolve extensions-by-pack> [INCOMPATIBILITY] getting-started/codeql-extra-queries-python: not 1.0.0 {root: getting-started/codeql-extra-queries-python@1.0.0}
[2025-02-11 14:53:51] [SPAMMY] resolve extensions-by-pack> [DERIVATION] getting-started/codeql-extra-queries-python: 1.0.0 {getting-started/codeql-extra-queries-python: not 1.0.0 {root: getting-started/codeql-extra-queries-python@1.0.0}}
[2025-02-11 14:53:51] [SPAMMY] resolve extensions-by-pack> [INCOMPATIBILITY] getting-started/codeql-extra-queries-python: * [*], codeql/python-all: not * [*] {dependency: getting-started/codeql-extra-queries-python@* [*] requires codeql/python-all@^4.0.0}
[2025-02-11 14:53:51] [SPAMMY] resolve extensions-by-pack> [DECISION 1] getting-started/codeql-extra-queries-python: 1.0.0
[2025-02-11 14:53:51] [SPAMMY] resolve extensions-by-pack> [DERIVATION] codeql/python-all: * [*] {getting-started/codeql-extra-queries-python: * [*], codeql/python-all: not * [*] {dependency: getting-started/codeql-extra-queries-python@* [*] requires codeql/python-all@^4.0.0}}
[2025-02-11 14:53:51] [SPAMMY] resolve extensions-by-pack> [INCOMPATIBILITY] codeql/python-all: * [*], codeql/dataflow: not * [*] {dependency: codeql/python-all@* [*] requires codeql/dataflow@2.0.0}
[2025-02-11 14:53:51] [SPAMMY] resolve extensions-by-pack> [INCOMPATIBILITY] codeql/python-all: * [*], codeql/mad: not * [*] {dependency: codeql/python-all@* [*] requires codeql/mad@1.0.16}
[2025-02-11 14:53:51] [SPAMMY] resolve extensions-by-pack> [INCOMPATIBILITY] codeql/python-all: * [*], codeql/regex: not * [*] {dependency: codeql/python-all@* [*] requires codeql/regex@1.0.16}
[2025-02-11 14:53:51] [SPAMMY] resolve extensions-by-pack> [INCOMPATIBILITY] codeql/python-all: * [*], codeql/threat-models: not * [*] {dependency: codeql/python-all@* [*] requires codeql/threat-models@1.0.16}
[2025-02-11 14:53:51] [SPAMMY] resolve extensions-by-pack> [INCOMPATIBILITY] codeql/python-all: * [*], codeql/tutorial: not * [*] {dependency: codeql/python-all@* [*] requires codeql/tutorial@1.0.16}
[2025-02-11 14:53:51] [SPAMMY] resolve extensions-by-pack> [INCOMPATIBILITY] codeql/python-all: * [*], codeql/util: not * [*] {dependency: codeql/python-all@* [*] requires codeql/util@2.0.3}
[2025-02-11 14:53:51] [SPAMMY] resolve extensions-by-pack> [INCOMPATIBILITY] codeql/python-all: * [*], codeql/xml: not * [*] {dependency: codeql/python-all@* [*] requires codeql/xml@1.0.16}
[2025-02-11 14:53:51] [SPAMMY] resolve extensions-by-pack> [INCOMPATIBILITY] codeql/python-all: * [*], codeql/yaml: not * [*] {dependency: codeql/python-all@* [*] requires codeql/yaml@1.0.16}
[2025-02-11 14:53:51] [SPAMMY] resolve extensions-by-pack> [DECISION 2] codeql/python-all: 4.0.0
[2025-02-11 14:53:51] [SPAMMY] resolve extensions-by-pack> [DERIVATION] codeql/yaml: * [*] {codeql/python-all: * [*], codeql/yaml: not * [*] {dependency: codeql/python-all@* [*] requires codeql/yaml@1.0.16}}
[2025-02-11 14:53:51] [SPAMMY] resolve extensions-by-pack> [DERIVATION] codeql/xml: * [*] {codeql/python-all: * [*], codeql/xml: not * [*] {dependency: codeql/python-all@* [*] requires codeql/xml@1.0.16}}
[2025-02-11 14:53:51] [SPAMMY] resolve extensions-by-pack> [DERIVATION] codeql/util: * [*] {codeql/python-all: * [*], codeql/util: not * [*] {dependency: codeql/python-all@* [*] requires codeql/util@2.0.3}}
[2025-02-11 14:53:51] [SPAMMY] resolve extensions-by-pack> [DERIVATION] codeql/tutorial: * [*] {codeql/python-all: * [*], codeql/tutorial: not * [*] {dependency: codeql/python-all@* [*] requires codeql/tutorial@1.0.16}}
[2025-02-11 14:53:51] [SPAMMY] resolve extensions-by-pack> [DERIVATION] codeql/threat-models: * [*] {codeql/python-all: * [*], codeql/threat-models: not * [*] {dependency: codeql/python-all@* [*] requires codeql/threat-models@1.0.16}}
[2025-02-11 14:53:51] [SPAMMY] resolve extensions-by-pack> [DERIVATION] codeql/regex: * [*] {codeql/python-all: * [*], codeql/regex: not * [*] {dependency: codeql/python-all@* [*] requires codeql/regex@1.0.16}}
[2025-02-11 14:53:51] [SPAMMY] resolve extensions-by-pack> [DERIVATION] codeql/mad: * [*] {codeql/python-all: * [*], codeql/mad: not * [*] {dependency: codeql/python-all@* [*] requires codeql/mad@1.0.16}}
[2025-02-11 14:53:51] [SPAMMY] resolve extensions-by-pack> [DERIVATION] codeql/dataflow: * [*] {codeql/python-all: * [*], codeql/dataflow: not * [*] {dependency: codeql/python-all@* [*] requires codeql/dataflow@2.0.0}}
[2025-02-11 14:53:51] [SPAMMY] resolve extensions-by-pack> [INCOMPATIBILITY] codeql/dataflow: * [*], codeql/ssa: not * [*] {dependency: codeql/dataflow@* [*] requires codeql/ssa@1.0.16}
[2025-02-11 14:53:51] [SPAMMY] resolve extensions-by-pack> [INCOMPATIBILITY] codeql/dataflow: * [*], codeql/typetracking: not * [*] {dependency: codeql/dataflow@* [*] requires codeql/typetracking@2.0.0}
[2025-02-11 14:53:51] [SPAMMY] resolve extensions-by-pack> [INCOMPATIBILITY] codeql/dataflow: * [*], codeql/util: not * [*] {dependency: codeql/dataflow@* [*] requires codeql/util@2.0.3}
[2025-02-11 14:53:51] [SPAMMY] resolve extensions-by-pack> [DECISION 3] codeql/dataflow: 2.0.0
[2025-02-11 14:53:51] [SPAMMY] resolve extensions-by-pack> [DERIVATION] codeql/typetracking: * [*] {codeql/dataflow: * [*], codeql/typetracking: not * [*] {dependency: codeql/dataflow@* [*] requires codeql/typetracking@2.0.0}}
[2025-02-11 14:53:51] [SPAMMY] resolve extensions-by-pack> [DERIVATION] codeql/ssa: * [*] {codeql/dataflow: * [*], codeql/ssa: not * [*] {dependency: codeql/dataflow@* [*] requires codeql/ssa@1.0.16}}
[2025-02-11 14:53:51] [SPAMMY] resolve extensions-by-pack> [INCOMPATIBILITY] codeql/mad: * [*], codeql/dataflow: not * [*] {dependency: codeql/mad@* [*] requires codeql/dataflow@2.0.0}
[2025-02-11 14:53:51] [SPAMMY] resolve extensions-by-pack> [INCOMPATIBILITY] codeql/mad: * [*], codeql/util: not * [*] {dependency: codeql/mad@* [*] requires codeql/util@2.0.3}
[2025-02-11 14:53:51] [SPAMMY] resolve extensions-by-pack> [DECISION 4] codeql/mad: 1.0.16
[2025-02-11 14:53:51] [SPAMMY] resolve extensions-by-pack> [INCOMPATIBILITY] codeql/regex: * [*], codeql/util: not * [*] {dependency: codeql/regex@* [*] requires codeql/util@2.0.3}
[2025-02-11 14:53:51] [SPAMMY] resolve extensions-by-pack> [DECISION 5] codeql/regex: 1.0.16
[2025-02-11 14:53:51] [SPAMMY] resolve extensions-by-pack> [INCOMPATIBILITY] codeql/ssa: * [*], codeql/util: not * [*] {dependency: codeql/ssa@* [*] requires codeql/util@2.0.3}
[2025-02-11 14:53:51] [SPAMMY] resolve extensions-by-pack> [DECISION 6] codeql/ssa: 1.0.16
[2025-02-11 14:53:51] [SPAMMY] resolve extensions-by-pack> [DECISION 7] codeql/threat-models: 1.0.16
[2025-02-11 14:53:51] [SPAMMY] resolve extensions-by-pack> [DECISION 8] codeql/tutorial: 1.0.16
[2025-02-11 14:53:51] [SPAMMY] resolve extensions-by-pack> [INCOMPATIBILITY] codeql/typetracking: * [*], codeql/util: not * [*] {dependency: codeql/typetracking@* [*] requires codeql/util@2.0.3}
[2025-02-11 14:53:51] [SPAMMY] resolve extensions-by-pack> [DECISION 9] codeql/typetracking: 2.0.0
[2025-02-11 14:53:51] [SPAMMY] resolve extensions-by-pack> [DECISION 10] codeql/util: 2.0.3
[2025-02-11 14:53:51] [SPAMMY] resolve extensions-by-pack> [INCOMPATIBILITY] codeql/xml: * [*], codeql/util: not * [*] {dependency: codeql/xml@* [*] requires codeql/util@2.0.3}
[2025-02-11 14:53:51] [SPAMMY] resolve extensions-by-pack> [DECISION 11] codeql/xml: 1.0.16
[2025-02-11 14:53:51] [SPAMMY] resolve extensions-by-pack> [DECISION 12] codeql/yaml: 1.0.16
[2025-02-11 14:53:51] [PROGRESS] resolve extensions-by-pack> Loading data extensions in C:\Users\timho\.codeql\packages\codeql\python-all\4.0.0\ext\default-threat-models-fixup.model.yml.
[2025-02-11 14:53:51] [DETAILS] resolve extensions-by-pack>   Found extension targeting codeql/threat-models:threatModelConfiguration: 1 tuples.
[2025-02-11 14:53:51] [PROGRESS] resolve extensions-by-pack> Loading data extensions in C:\Users\timho\.codeql\packages\codeql\python-all\4.0.0\semmle\python\frameworks\Asyncpg.model.yml.
[2025-02-11 14:53:51] [DETAILS] resolve extensions-by-pack>   Found extension targeting codeql/python-all:sinkModel: 5 tuples.
[2025-02-11 14:53:51] [DETAILS] resolve extensions-by-pack>   Found extension targeting codeql/python-all:typeModel: 6 tuples.
[2025-02-11 14:53:51] [PROGRESS] resolve extensions-by-pack> Loading data extensions in C:\Users\timho\.codeql\packages\codeql\python-all\4.0.0\semmle\python\frameworks\Stdlib.model.yml.
[2025-02-11 14:53:51] [DETAILS] resolve extensions-by-pack>   Found extension targeting codeql/python-all:sourceModel: 12 tuples.
[2025-02-11 14:53:51] [DETAILS] resolve extensions-by-pack>   Found extension targeting codeql/python-all:sinkModel: 1 tuples.
[2025-02-11 14:53:51] [DETAILS] resolve extensions-by-pack>   Found extension targeting codeql/python-all:summaryModel: 66 tuples.
[2025-02-11 14:53:51] [DETAILS] resolve extensions-by-pack>   Found extension targeting codeql/python-all:neutralModel: 0 tuples.
[2025-02-11 14:53:51] [DETAILS] resolve extensions-by-pack>   Found extension targeting codeql/python-all:typeModel: 0 tuples.
[2025-02-11 14:53:51] [DETAILS] resolve extensions-by-pack>   Found extension targeting codeql/python-all:typeVariableModel: 0 tuples.
[2025-02-11 14:53:51] [PROGRESS] resolve extensions-by-pack> Loading data extensions in C:\Users\timho\.codeql\packages\codeql\python-all\4.0.0\semmle\python\frameworks\data\internal\empty.model.yml.
[2025-02-11 14:53:51] [DETAILS] resolve extensions-by-pack>   Found extension targeting codeql/python-all:sourceModel: 0 tuples.
[2025-02-11 14:53:51] [DETAILS] resolve extensions-by-pack>   Found extension targeting codeql/python-all:sinkModel: 0 tuples.
[2025-02-11 14:53:51] [DETAILS] resolve extensions-by-pack>   Found extension targeting codeql/python-all:summaryModel: 0 tuples.
[2025-02-11 14:53:51] [DETAILS] resolve extensions-by-pack>   Found extension targeting codeql/python-all:neutralModel: 0 tuples.
[2025-02-11 14:53:51] [DETAILS] resolve extensions-by-pack>   Found extension targeting codeql/python-all:typeModel: 0 tuples.
[2025-02-11 14:53:51] [DETAILS] resolve extensions-by-pack>   Found extension targeting codeql/python-all:typeVariableModel: 0 tuples.
[2025-02-11 14:53:52] [PROGRESS] resolve extensions-by-pack> Loading data extensions in C:\Users\timho\.codeql\packages\codeql\python-all\4.0.0\semmle\python\frameworks\data\internal\subclass-capture\ALL.model.yml.
[2025-02-11 14:53:52] [DETAILS] resolve extensions-by-pack>   Found extension targeting codeql/python-all:typeModel: 58275 tuples.
[2025-02-11 14:53:52] [PROGRESS] resolve extensions-by-pack> Loading data extensions in C:\Users\timho\.codeql\packages\codeql\threat-models\1.0.16\ext\supported-threat-models.model.yml.
[2025-02-11 14:53:52] [DETAILS] resolve extensions-by-pack>   Found extension targeting codeql/threat-models:threatModelConfiguration: 1 tuples.
[2025-02-11 14:53:52] [PROGRESS] resolve extensions-by-pack> Loading data extensions in C:\Users\timho\.codeql\packages\codeql\threat-models\1.0.16\ext\threat-model-grouping.model.yml.
[2025-02-11 14:53:52] [DETAILS] resolve extensions-by-pack>   Found extension targeting codeql/threat-models:threatModelGrouping: 15 tuples.
[2025-02-11 14:53:52] [PROGRESS] resolve extensions-by-pack> Loading data extensions in C:\Users\timho\.codeql\packages\codeql\util\2.0.3\ext\default-alert-filter.yml.
[2025-02-11 14:53:52] [DETAILS] resolve extensions-by-pack>   Found extension targeting codeql/util:restrictAlertsTo: 0 tuples.
[2025-02-11 14:53:52] [DETAILS] resolve extensions-by-pack>   Found extension targeting codeql/util:restrictAlertsToExactLocation: 0 tuples.
[2025-02-11 14:53:52] Plumbing command codeql resolve extensions-by-pack completed:
                      {
                        "models" : [ ],
                        "data" : {
                          "C:\\BEng\\4th Year\\Honours Project\\GreenPythonLocal\\codeql-custom-queries-python" : [
                            {
                              "predicate" : "threatModelConfiguration",
                              "file" : "C:\\Users\\timho\\.codeql\\packages\\codeql\\python-all\\4.0.0\\ext\\default-threat-models-fixup.model.yml",
                              "index" : 0,
                              "firstRowId" : 0,
                              "rowCount" : 1,
                              "predicateHasOrigin" : false
                            },
                            {
                              "predicate" : "sinkModel",
                              "file" : "C:\\Users\\timho\\.codeql\\packages\\codeql\\python-all\\4.0.0\\semmle\\python\\frameworks\\Asyncpg.model.yml",
                              "index" : 0,
                              "firstRowId" : 1,
                              "rowCount" : 5,
                              "predicateHasOrigin" : true
                            },
                            {
                              "predicate" : "typeModel",
                              "file" : "C:\\Users\\timho\\.codeql\\packages\\codeql\\python-all\\4.0.0\\semmle\\python\\frameworks\\Asyncpg.model.yml",
                              "index" : 1,
                              "firstRowId" : 6,
                              "rowCount" : 6,
                              "predicateHasOrigin" : false
                            },
                            {
                              "predicate" : "sourceModel",
                              "file" : "C:\\Users\\timho\\.codeql\\packages\\codeql\\python-all\\4.0.0\\semmle\\python\\frameworks\\Stdlib.model.yml",
                              "index" : 0,
                              "firstRowId" : 12,
                              "rowCount" : 12,
                              "predicateHasOrigin" : true
                            },
                            {
                              "predicate" : "sinkModel",
                              "file" : "C:\\Users\\timho\\.codeql\\packages\\codeql\\python-all\\4.0.0\\semmle\\python\\frameworks\\Stdlib.model.yml",
                              "index" : 1,
                              "firstRowId" : 24,
                              "rowCount" : 1,
                              "predicateHasOrigin" : true
                            },
                            {
                              "predicate" : "summaryModel",
                              "file" : "C:\\Users\\timho\\.codeql\\packages\\codeql\\python-all\\4.0.0\\semmle\\python\\frameworks\\Stdlib.model.yml",
                              "index" : 2,
                              "firstRowId" : 25,
                              "rowCount" : 66,
                              "predicateHasOrigin" : true
                            },
                            {
                              "predicate" : "neutralModel",
                              "file" : "C:\\Users\\timho\\.codeql\\packages\\codeql\\python-all\\4.0.0\\semmle\\python\\frameworks\\Stdlib.model.yml",
                              "index" : 3,
                              "firstRowId" : 91,
                              "rowCount" : 0,
                              "predicateHasOrigin" : false
                            },
                            {
                              "predicate" : "typeModel",
                              "file" : "C:\\Users\\timho\\.codeql\\packages\\codeql\\python-all\\4.0.0\\semmle\\python\\frameworks\\Stdlib.model.yml",
                              "index" : 4,
                              "firstRowId" : 91,
                              "rowCount" : 0,
                              "predicateHasOrigin" : false
                            },
                            {
                              "predicate" : "typeVariableModel",
                              "file" : "C:\\Users\\timho\\.codeql\\packages\\codeql\\python-all\\4.0.0\\semmle\\python\\frameworks\\Stdlib.model.yml",
                              "index" : 5,
                              "firstRowId" : 91,
                              "rowCount" : 0,
                              "predicateHasOrigin" : false
                            },
                            {
                              "predicate" : "sourceModel",
                              "file" : "C:\\Users\\timho\\.codeql\\packages\\codeql\\python-all\\4.0.0\\semmle\\python\\frameworks\\data\\internal\\empty.model.yml",
                              "index" : 0,
                              "firstRowId" : 91,
                              "rowCount" : 0,
                              "predicateHasOrigin" : true
                            },
                            {
                              "predicate" : "sinkModel",
                              "file" : "C:\\Users\\timho\\.codeql\\packages\\codeql\\python-all\\4.0.0\\semmle\\python\\frameworks\\data\\internal\\empty.model.yml",
                              "index" : 1,
                              "firstRowId" : 91,
                              "rowCount" : 0,
                              "predicateHasOrigin" : true
                            },
                            {
                              "predicate" : "summaryModel",
                              "file" : "C:\\Users\\timho\\.codeql\\packages\\codeql\\python-all\\4.0.0\\semmle\\python\\frameworks\\data\\internal\\empty.model.yml",
                              "index" : 2,
                              "firstRowId" : 91,
                              "rowCount" : 0,
                              "predicateHasOrigin" : true
                            },
                            {
                              "predicate" : "neutralModel",
                              "file" : "C:\\Users\\timho\\.codeql\\packages\\codeql\\python-all\\4.0.0\\semmle\\python\\frameworks\\data\\internal\\empty.model.yml",
                              "index" : 3,
                              "firstRowId" : 91,
                              "rowCount" : 0,
                              "predicateHasOrigin" : false
                            },
                            {
                              "predicate" : "typeModel",
                              "file" : "C:\\Users\\timho\\.codeql\\packages\\codeql\\python-all\\4.0.0\\semmle\\python\\frameworks\\data\\internal\\empty.model.yml",
                              "index" : 4,
                              "firstRowId" : 91,
                              "rowCount" : 0,
                              "predicateHasOrigin" : false
                            },
                            {
                              "predicate" : "typeVariableModel",
                              "file" : "C:\\Users\\timho\\.codeql\\packages\\codeql\\python-all\\4.0.0\\semmle\\python\\frameworks\\data\\internal\\empty.model.yml",
                              "index" : 5,
                              "firstRowId" : 91,
                              "rowCount" : 0,
                              "predicateHasOrigin" : false
                            },
                            {
                              "predicate" : "typeModel",
                              "file" : "C:\\Users\\timho\\.codeql\\packages\\codeql\\python-all\\4.0.0\\semmle\\python\\frameworks\\data\\internal\\subclass-capture\\ALL.model.yml",
                              "index" : 0,
                              "firstRowId" : 91,
                              "rowCount" : 58275,
                              "predicateHasOrigin" : false
                            },
                            {
                              "predicate" : "threatModelConfiguration",
                              "file" : "C:\\Users\\timho\\.codeql\\packages\\codeql\\threat-models\\1.0.16\\ext\\supported-threat-models.model.yml",
                              "index" : 0,
                              "firstRowId" : 58366,
                              "rowCount" : 1,
                              "predicateHasOrigin" : false
                            },
                            {
                              "predicate" : "threatModelGrouping",
                              "file" : "C:\\Users\\timho\\.codeql\\packages\\codeql\\threat-models\\1.0.16\\ext\\threat-model-grouping.model.yml",
                              "index" : 0,
                              "firstRowId" : 58367,
                              "rowCount" : 15,
                              "predicateHasOrigin" : false
                            },
                            {
                              "predicate" : "restrictAlertsTo",
                              "file" : "C:\\Users\\timho\\.codeql\\packages\\codeql\\util\\2.0.3\\ext\\default-alert-filter.yml",
                              "index" : 0,
                              "firstRowId" : 58382,
                              "rowCount" : 0,
                              "predicateHasOrigin" : false
                            },
                            {
                              "predicate" : "restrictAlertsToExactLocation",
                              "file" : "C:\\Users\\timho\\.codeql\\packages\\codeql\\util\\2.0.3\\ext\\default-alert-filter.yml",
                              "index" : 1,
                              "firstRowId" : 58382,
                              "rowCount" : 0,
                              "predicateHasOrigin" : false
                            }
                          ]
                        },
                        "threatModels" : {
                          "C:\\BEng\\4th Year\\Honours Project\\GreenPythonLocal\\codeql-custom-queries-python" : {
                            "extensions" : [
                              {
                                "data" : [ ],
                                "addsTo" : {
                                  "extensible" : "threatModelConfiguration",
                                  "packName" : "codeql/threat-models"
                                }
                              }
                            ]
                          }
                        },
                        "extensionPacks" : [ ]
                      }
[2025-02-11 14:53:52] Plumbing command codeql resolve extensions completed:
                      {
                        "models" : [ ],
                        "data" : {
                          "C:\\BEng\\4th Year\\Honours Project\\GreenPythonLocal\\codeql-custom-queries-python" : [
                            {
                              "predicate" : "threatModelConfiguration",
                              "file" : "C:\\Users\\timho\\.codeql\\packages\\codeql\\python-all\\4.0.0\\ext\\default-threat-models-fixup.model.yml",
                              "index" : 0,
                              "firstRowId" : 0,
                              "rowCount" : 1,
                              "predicateHasOrigin" : false
                            },
                            {
                              "predicate" : "sinkModel",
                              "file" : "C:\\Users\\timho\\.codeql\\packages\\codeql\\python-all\\4.0.0\\semmle\\python\\frameworks\\Asyncpg.model.yml",
                              "index" : 0,
                              "firstRowId" : 1,
                              "rowCount" : 5,
                              "predicateHasOrigin" : true
                            },
                            {
                              "predicate" : "typeModel",
                              "file" : "C:\\Users\\timho\\.codeql\\packages\\codeql\\python-all\\4.0.0\\semmle\\python\\frameworks\\Asyncpg.model.yml",
                              "index" : 1,
                              "firstRowId" : 6,
                              "rowCount" : 6,
                              "predicateHasOrigin" : false
                            },
                            {
                              "predicate" : "sourceModel",
                              "file" : "C:\\Users\\timho\\.codeql\\packages\\codeql\\python-all\\4.0.0\\semmle\\python\\frameworks\\Stdlib.model.yml",
                              "index" : 0,
                              "firstRowId" : 12,
                              "rowCount" : 12,
                              "predicateHasOrigin" : true
                            },
                            {
                              "predicate" : "sinkModel",
                              "file" : "C:\\Users\\timho\\.codeql\\packages\\codeql\\python-all\\4.0.0\\semmle\\python\\frameworks\\Stdlib.model.yml",
                              "index" : 1,
                              "firstRowId" : 24,
                              "rowCount" : 1,
                              "predicateHasOrigin" : true
                            },
                            {
                              "predicate" : "summaryModel",
                              "file" : "C:\\Users\\timho\\.codeql\\packages\\codeql\\python-all\\4.0.0\\semmle\\python\\frameworks\\Stdlib.model.yml",
                              "index" : 2,
                              "firstRowId" : 25,
                              "rowCount" : 66,
                              "predicateHasOrigin" : true
                            },
                            {
                              "predicate" : "neutralModel",
                              "file" : "C:\\Users\\timho\\.codeql\\packages\\codeql\\python-all\\4.0.0\\semmle\\python\\frameworks\\Stdlib.model.yml",
                              "index" : 3,
                              "firstRowId" : 91,
                              "rowCount" : 0,
                              "predicateHasOrigin" : false
                            },
                            {
                              "predicate" : "typeModel",
                              "file" : "C:\\Users\\timho\\.codeql\\packages\\codeql\\python-all\\4.0.0\\semmle\\python\\frameworks\\Stdlib.model.yml",
                              "index" : 4,
                              "firstRowId" : 91,
                              "rowCount" : 0,
                              "predicateHasOrigin" : false
                            },
                            {
                              "predicate" : "typeVariableModel",
                              "file" : "C:\\Users\\timho\\.codeql\\packages\\codeql\\python-all\\4.0.0\\semmle\\python\\frameworks\\Stdlib.model.yml",
                              "index" : 5,
                              "firstRowId" : 91,
                              "rowCount" : 0,
                              "predicateHasOrigin" : false
                            },
                            {
                              "predicate" : "sourceModel",
                              "file" : "C:\\Users\\timho\\.codeql\\packages\\codeql\\python-all\\4.0.0\\semmle\\python\\frameworks\\data\\internal\\empty.model.yml",
                              "index" : 0,
                              "firstRowId" : 91,
                              "rowCount" : 0,
                              "predicateHasOrigin" : true
                            },
                            {
                              "predicate" : "sinkModel",
                              "file" : "C:\\Users\\timho\\.codeql\\packages\\codeql\\python-all\\4.0.0\\semmle\\python\\frameworks\\data\\internal\\empty.model.yml",
                              "index" : 1,
                              "firstRowId" : 91,
                              "rowCount" : 0,
                              "predicateHasOrigin" : true
                            },
                            {
                              "predicate" : "summaryModel",
                              "file" : "C:\\Users\\timho\\.codeql\\packages\\codeql\\python-all\\4.0.0\\semmle\\python\\frameworks\\data\\internal\\empty.model.yml",
                              "index" : 2,
                              "firstRowId" : 91,
                              "rowCount" : 0,
                              "predicateHasOrigin" : true
                            },
                            {
                              "predicate" : "neutralModel",
                              "file" : "C:\\Users\\timho\\.codeql\\packages\\codeql\\python-all\\4.0.0\\semmle\\python\\frameworks\\data\\internal\\empty.model.yml",
                              "index" : 3,
                              "firstRowId" : 91,
                              "rowCount" : 0,
                              "predicateHasOrigin" : false
                            },
                            {
                              "predicate" : "typeModel",
                              "file" : "C:\\Users\\timho\\.codeql\\packages\\codeql\\python-all\\4.0.0\\semmle\\python\\frameworks\\data\\internal\\empty.model.yml",
                              "index" : 4,
                              "firstRowId" : 91,
                              "rowCount" : 0,
                              "predicateHasOrigin" : false
                            },
                            {
                              "predicate" : "typeVariableModel",
                              "file" : "C:\\Users\\timho\\.codeql\\packages\\codeql\\python-all\\4.0.0\\semmle\\python\\frameworks\\data\\internal\\empty.model.yml",
                              "index" : 5,
                              "firstRowId" : 91,
                              "rowCount" : 0,
                              "predicateHasOrigin" : false
                            },
                            {
                              "predicate" : "typeModel",
                              "file" : "C:\\Users\\timho\\.codeql\\packages\\codeql\\python-all\\4.0.0\\semmle\\python\\frameworks\\data\\internal\\subclass-capture\\ALL.model.yml",
                              "index" : 0,
                              "firstRowId" : 91,
                              "rowCount" : 58275,
                              "predicateHasOrigin" : false
                            },
                            {
                              "predicate" : "threatModelConfiguration",
                              "file" : "C:\\Users\\timho\\.codeql\\packages\\codeql\\threat-models\\1.0.16\\ext\\supported-threat-models.model.yml",
                              "index" : 0,
                              "firstRowId" : 58366,
                              "rowCount" : 1,
                              "predicateHasOrigin" : false
                            },
                            {
                              "predicate" : "threatModelGrouping",
                              "file" : "C:\\Users\\timho\\.codeql\\packages\\codeql\\threat-models\\1.0.16\\ext\\threat-model-grouping.model.yml",
                              "index" : 0,
                              "firstRowId" : 58367,
                              "rowCount" : 15,
                              "predicateHasOrigin" : false
                            },
                            {
                              "predicate" : "restrictAlertsTo",
                              "file" : "C:\\Users\\timho\\.codeql\\packages\\codeql\\util\\2.0.3\\ext\\default-alert-filter.yml",
                              "index" : 0,
                              "firstRowId" : 58382,
                              "rowCount" : 0,
                              "predicateHasOrigin" : false
                            },
                            {
                              "predicate" : "restrictAlertsToExactLocation",
                              "file" : "C:\\Users\\timho\\.codeql\\packages\\codeql\\util\\2.0.3\\ext\\default-alert-filter.yml",
                              "index" : 1,
                              "firstRowId" : 58382,
                              "rowCount" : 0,
                              "predicateHasOrigin" : false
                            }
                          ]
                        },
                        "threatModels" : {
                          "C:\\BEng\\4th Year\\Honours Project\\GreenPythonLocal\\codeql-custom-queries-python" : {
                            "extensions" : [
                              {
                                "data" : [ ],
                                "addsTo" : {
                                  "extensible" : "threatModelConfiguration",
                                  "packName" : "codeql/threat-models"
                                }
                              }
                            ]
                          }
                        },
                        "extensionPacks" : [ ]
                      }
[2025-02-11 14:53:52] [PROGRESS] database interpret-results> Interpreting C:\BEng\4th Year\Honours Project\GreenPythonLocal\codeql-custom-queries-python\example.ql...
[2025-02-11 14:53:52] Calling plumbing command: codeql resolve library-path --query=C:\BEng\4th Year\Honours Project\GreenPythonLocal\codeql-custom-queries-python\example.ql --full-library-path=none --dbscheme=none --format=json
[2025-02-11 14:53:52] [DETAILS] resolve library-path> Resolving query at normalized path C:\BEng\4th Year\Honours Project\GreenPythonLocal\codeql-custom-queries-python\example.ql.
[2025-02-11 14:53:52] [DETAILS] resolve library-path> Found enclosing pack 'getting-started/codeql-extra-queries-python' at C:\BEng\4th Year\Honours Project\GreenPythonLocal\codeql-custom-queries-python.
[2025-02-11 14:53:52] [DETAILS] resolve library-path> Adding compilation cache at C:\Users\timho\.codeql\compile-cache.
[2025-02-11 14:53:52] [DETAILS] resolve library-path> Dbscheme was explicitly overridden as C:\BEng\4th Year\Honours Project\GreenPythonLocal\none
[2025-02-11 14:53:52] [DETAILS] resolve library-path> Library path was overridden on command line.
[2025-02-11 14:53:52] Plumbing command codeql resolve library-path completed:
                      {
                        "libraryPath" : [
                          "C:\\BEng\\4th Year\\Honours Project\\GreenPythonLocal\\none"
                        ],
                        "dbscheme" : "C:\\BEng\\4th Year\\Honours Project\\GreenPythonLocal\\none",
                        "compilationCache" : [
                          "C:\\Users\\timho\\.codeql\\compile-cache"
                        ],
                        "relativeName" : "getting-started\\codeql-extra-queries-python\\example.ql",
                        "qlPackName" : "getting-started/codeql-extra-queries-python"
                      }
[2025-02-11 14:53:52] [DETAILS] database interpret-results>  ... found results file at C:\BEng\4th Year\Honours Project\GreenPythonLocal\my-python-db\results\getting-started\codeql-extra-queries-python\example.bqrs.
[2025-02-11 14:53:52] [DETAILS] database interpret-results> Interpreted problem query "Hello world" (python/example/hello-world) at path C:\BEng\4th Year\Honours Project\GreenPythonLocal\my-python-db\results\getting-started\codeql-extra-queries-python\example.bqrs.
[2025-02-11 14:53:52] [DETAILS] database interpret-results> Interpreting file coverage baseline information
[2025-02-11 14:53:52] [DETAILS] database interpret-results> Finished interpreting file coverage baseline information.
[2025-02-11 14:53:52] [DETAILS] database interpret-results> Interpreting diagnostic messages...
[2025-02-11 14:53:52] [SPAMMY] database interpret-results> Looking for diagnostics in C:\BEng\4th Year\Honours Project\GreenPythonLocal\my-python-db\diagnostic...
[2025-02-11 14:53:52] [SPAMMIER] database interpret-results> Found diagnostics file C:\BEng\4th Year\Honours Project\GreenPythonLocal\my-python-db\diagnostic\cli-diagnostics-add-20250211T143433.948Z.json.
[2025-02-11 14:53:52] [SPAMMIER] database interpret-results> Found diagnostics file C:\BEng\4th Year\Honours Project\GreenPythonLocal\my-python-db\diagnostic\cli-diagnostics-add-20250211T143435.602Z.json.
[2025-02-11 14:53:52] [SPAMMIER] database interpret-results> Found diagnostics file C:\BEng\4th Year\Honours Project\GreenPythonLocal\my-python-db\diagnostic\cli-diagnostics-add-20250211T144506.655Z.json.
[2025-02-11 14:53:52] [SPAMMIER] database interpret-results> Found diagnostics file C:\BEng\4th Year\Honours Project\GreenPythonLocal\my-python-db\diagnostic\cli-diagnostics-add-20250211T144619.878Z.json.
[2025-02-11 14:53:52] [SPAMMIER] database interpret-results> Found diagnostics file C:\BEng\4th Year\Honours Project\GreenPythonLocal\my-python-db\diagnostic\cli-diagnostics-add-20250211T145252.726Z.json.
[2025-02-11 14:53:52] [SPAMMY] database interpret-results> Looking for diagnostics in C:\BEng\4th Year\Honours Project\GreenPythonLocal\my-python-db\diagnostic\extractors...
[2025-02-11 14:53:52] [SPAMMY] database interpret-results> Looking for diagnostics in C:\BEng\4th Year\Honours Project\GreenPythonLocal\my-python-db\diagnostic\extractors\python...
[2025-02-11 14:53:52] [SPAMMY] database interpret-results> Looking for diagnostics in C:\BEng\4th Year\Honours Project\GreenPythonLocal\my-python-db\diagnostic\extractors\yaml...
[2025-02-11 14:53:52] [SPAMMY] database interpret-results> Looking for diagnostics in C:\BEng\4th Year\Honours Project\GreenPythonLocal\my-python-db\diagnostic\tracer...
[2025-02-11 14:53:52] [DETAILS] database interpret-results> Found 0 raw diagnostic messages.
[2025-02-11 14:53:52] [DETAILS] database interpret-results> Processed diagnostic messages (removed 0 due to limits, created 0 summary diagnostics for status page).
[2025-02-11 14:53:52] [DETAILS] database interpret-results> Interpreted diagnostic messages (48ms).
[2025-02-11 14:53:52] Calling plumbing command: codeql resolve languages --format=json
[2025-02-11 14:53:52] [DETAILS] resolve languages> Scanning for [codeql-extractor.yml] from c:\codeql\.codeqlmanifest.json
[2025-02-11 14:53:52] [DETAILS] resolve languages> Parsing c:\codeql\cpp\codeql-extractor.yml.
[2025-02-11 14:53:52] [DETAILS] resolve languages> Parsing c:\codeql\csharp\codeql-extractor.yml.
[2025-02-11 14:53:52] [DETAILS] resolve languages> Parsing c:\codeql\csv\codeql-extractor.yml.
[2025-02-11 14:53:52] [DETAILS] resolve languages> Parsing c:\codeql\go\codeql-extractor.yml.
[2025-02-11 14:53:52] [DETAILS] resolve languages> Parsing c:\codeql\html\codeql-extractor.yml.
[2025-02-11 14:53:52] [DETAILS] resolve languages> Parsing c:\codeql\java\codeql-extractor.yml.
[2025-02-11 14:53:52] [DETAILS] resolve languages> Parsing c:\codeql\javascript\codeql-extractor.yml.
[2025-02-11 14:53:52] [DETAILS] resolve languages> Parsing c:\codeql\properties\codeql-extractor.yml.
[2025-02-11 14:53:52] [DETAILS] resolve languages> Parsing c:\codeql\python\codeql-extractor.yml.
[2025-02-11 14:53:52] [DETAILS] resolve languages> Parsing c:\codeql\ruby\codeql-extractor.yml.
[2025-02-11 14:53:52] [DETAILS] resolve languages> Parsing c:\codeql\swift\codeql-extractor.yml.
[2025-02-11 14:53:52] [DETAILS] resolve languages> Parsing c:\codeql\xml\codeql-extractor.yml.
[2025-02-11 14:53:52] [DETAILS] resolve languages> Parsing c:\codeql\yaml\codeql-extractor.yml.
[2025-02-11 14:53:53] Plumbing command codeql resolve languages completed:
                      {
                        "aliases" : {
                          "c" : "cpp",
                          "c++" : "cpp",
                          "c-c++" : "cpp",
                          "c-cpp" : "cpp",
                          "c#" : "csharp",
                          "java-kotlin" : "java",
                          "kotlin" : "java",
                          "javascript-typescript" : "javascript",
                          "typescript" : "javascript"
                        },
                        "extractors" : {
                          "cpp" : [
                            {
                              "extractor_root" : "c:\\codeql\\cpp",
                              "extractor_options" : {
                                "scale_timeouts" : {
                                  "title" : "Value to scale compiler introspection timeouts with",
                                  "description" : "The extractor attempts to determine what compiler the source code being extracted is compiled with. To this end the extractor makes additional calls to the compiler, some of which are expected to return within a certain fixed time (either 10s or 15s). On some systems that are under high load this time might be too short, and can be scaled up using this option.\n",
                                  "type" : "string",
                                  "pattern" : "[0-9]+"
                                },
                                "log_verbosity" : {
                                  "title" : "Verbosity of the extractor logging",
                                  "description" : "Set the verbosity of the extractor logging to 'quiet' (0), 'normal' (1), 'chatty' (2), or 'noisy' (3). The default is 'normal'.\n",
                                  "type" : "string",
                                  "pattern" : "[0-3]"
                                }
                              }
                            }
                          ],
                          "csharp" : [
                            {
                              "extractor_root" : "c:\\codeql\\csharp",
                              "extractor_options" : {
                                "trap" : {
                                  "title" : "Options pertaining to TRAP.",
                                  "description" : "Options pertaining to TRAP.",
                                  "type" : "object",
                                  "properties" : {
                                    "compression" : {
                                      "title" : "Controls compression for the TRAP files written by the extractor.",
                                      "description" : "This option is only intended for use in debugging the extractor. Accepted values are 'brotli' (the default, to write brotli-compressed TRAP), 'gzip', and 'none' (to write uncompressed TRAP).\n",
                                      "type" : "string",
                                      "pattern" : "^(none|gzip|brotli)$"
                                    }
                                  }
                                },
                                "buildless" : {
                                  "title" : "DEPRECATED - Whether to use buildless (standalone) extraction.",
                                  "description" : "DEPRECATED: Use `--build-mode none` instead.\nA value indicating, which type of extraction the autobuilder should perform. If 'true', then the standalone extractor will be used, otherwise tracing extraction will be performed. The default is 'false'. Note that buildless extraction will generally yield less accurate analysis results, and should only be used in cases where it is not possible to build the code (for example if it uses inaccessible dependencies).\n",
                                  "type" : "string",
                                  "pattern" : "^(false|true)$"
                                },
                                "logging" : {
                                  "title" : "Options pertaining to logging.",
                                  "description" : "Options pertaining to logging.",
                                  "type" : "object",
                                  "properties" : {
                                    "verbosity" : {
                                      "title" : "Extractor logging verbosity level.",
                                      "description" : "Controls the level of verbosity of the extractor. The supported levels are (in order of increasing verbosity):\n  - off\n  - errors\n  - warnings\n  - info or progress\n  - debug or progress+\n  - trace or progress++\n  - progress+++\n",
                                      "type" : "string",
                                      "pattern" : "^(off|errors|warnings|(info|progress)|(debug|progress\\+)|(trace|progress\\+\\+)|progress\\+\\+\\+)$"
                                    }
                                  }
                                },
                                "binlog" : {
                                  "title" : "Binlog",
                                  "description" : "[EXPERIMENTAL] The value is a path to the MsBuild binary log file that should be extracted. This option only works when `--build-mode none` is also specified.\n",
                                  "type" : "array"
                                }
                              }
                            }
                          ],
                          "csv" : [
                            {
                              "extractor_root" : "c:\\codeql\\csv"
                            }
                          ],
                          "go" : [
                            {
                              "extractor_root" : "c:\\codeql\\go",
                              "extractor_options" : {
                                "extract_tests" : {
                                  "title" : "Whether to include Go test files in the CodeQL database.",
                                  "description" : "A value indicating whether Go test files should be included in the CodeQL database. The default is 'false'.\n",
                                  "type" : "string",
                                  "pattern" : "^(false|true)$"
                                },
                                "extract_vendor_dirs" : {
                                  "title" : "Whether to include Go vendor directories in the CodeQL database.",
                                  "description" : "A value indicating whether Go vendor directories should be included in the CodeQL database. The default is 'false'.\n",
                                  "type" : "string",
                                  "pattern" : "^(false|true)$"
                                }
                              }
                            }
                          ],
                          "html" : [
                            {
                              "extractor_root" : "c:\\codeql\\html"
                            }
                          ],
                          "java" : [
                            {
                              "extractor_root" : "c:\\codeql\\java",
                              "extractor_options" : {
                                "exclude" : {
                                  "title" : "A glob excluding files from analysis.",
                                  "description" : "A glob indicating what files to exclude from the analysis.\n",
                                  "type" : "string"
                                },
                                "add_prefer_source" : {
                                  "title" : "Whether to always prefer source files over class files.",
                                  "description" : "A value indicating whether source files should be preferred over class files. If set to 'true', the extraction adds '-Xprefer:source' to the javac command line. If set to 'false', the extraction uses the default javac behavior ('-Xprefer:newer'). The default is 'true'.\n",
                                  "type" : "string",
                                  "pattern" : "^(false|true)$"
                                },
                                "buildless" : {
                                  "title" : "Whether to use buildless (standalone) extraction (experimental).",
                                  "description" : "A value indicating, which type of extraction the autobuilder should perform. If 'true', then the standalone extractor will be used, otherwise tracing extraction will be performed. The default is 'false'. Note that buildless extraction will generally yield less accurate analysis results, and should only be used in cases where it is not possible to build the code (for example if it uses inaccessible dependencies).\n",
                                  "type" : "string",
                                  "pattern" : "^(false|true)$"
                                }
                              }
                            }
                          ],
                          "javascript" : [
                            {
                              "extractor_root" : "c:\\codeql\\javascript",
                              "extractor_options" : {
                                "skip_types" : {
                                  "title" : "Skip type extraction for TypeScript",
                                  "description" : "Whether to skip the extraction of types in a TypeScript application",
                                  "type" : "string",
                                  "pattern" : "^(false|true)$"
                                }
                              }
                            }
                          ],
                          "properties" : [
                            {
                              "extractor_root" : "c:\\codeql\\properties"
                            }
                          ],
                          "python" : [
                            {
                              "extractor_root" : "c:\\codeql\\python",
                              "extractor_options" : {
                                "logging" : {
                                  "title" : "Options pertaining to logging.",
                                  "description" : "Options pertaining to logging.",
                                  "type" : "object",
                                  "properties" : {
                                    "verbosity" : {
                                      "title" : "Python extractor logging verbosity level.",
                                      "description" : "Controls the level of verbosity of the CodeQL Python extractor.\nThe supported levels are (in order of increasing verbosity):\n\n  - off\n  - errors\n  - warnings\n  - info or progress\n  - debug or progress+\n  - trace or progress++\n  - progress+++\n",
                                      "type" : "string",
                                      "pattern" : "^(off|errors|warnings|(info|progress)|(debug|progress\\+)|(trace|progress\\+\\+)|progress\\+\\+\\+)$"
                                    }
                                  }
                                },
                                "python_executable_name" : {
                                  "title" : "Controls the name of the Python executable used by the Python extractor.",
                                  "description" : "The Python extractor uses platform-dependent heuristics to determine the name of the Python executable to use. Specifying a value for this option overrides the name of the Python executable used by the extractor. Accepted values are py, python and python3. Use this setting with caution, the Python extractor requires Python 3 to run.\n",
                                  "type" : "string",
                                  "pattern" : "^(py|python|python3)$"
                                }
                              }
                            }
                          ],
                          "ruby" : [
                            {
                              "extractor_root" : "c:\\codeql\\ruby",
                              "extractor_options" : {
                                "trap" : {
                                  "title" : "Options pertaining to TRAP.",
                                  "description" : "Options pertaining to TRAP.",
                                  "type" : "object",
                                  "properties" : {
                                    "compression" : {
                                      "title" : "Controls compression for the TRAP files written by the extractor.",
                                      "description" : "This option is only intended for use in debugging the extractor. Accepted values are 'gzip' (the default, to write gzip-compressed TRAP) and 'none' (to write uncompressed TRAP).\n",
                                      "type" : "string",
                                      "pattern" : "^(none|gzip)$"
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "swift" : [
                            {
                              "extractor_root" : "c:\\codeql\\swift"
                            }
                          ],
                          "xml" : [
                            {
                              "extractor_root" : "c:\\codeql\\xml"
                            }
                          ],
                          "yaml" : [
                            {
                              "extractor_root" : "c:\\codeql\\yaml"
                            }
                          ]
                        }
                      }
[2025-02-11 14:53:53] [SPAMMIER] database interpret-results> Loaded the following extractors: C/C++, C#, CSV, Go, HTML, Java/Kotlin, JavaScript/TypeScript, Java Properties Files, Python, Ruby, Swift, XML, YAML
[2025-02-11 14:53:53] [PROGRESS] database interpret-results> Exporting results to CSV...
[2025-02-11 14:53:53] [SPAMMY] database interpret-results> Skipping non-rule analysis py/baseline/expected-extracted-files
[2025-02-11 14:53:53] [PROGRESS] database interpret-results> Exported results to CSV (32ms).
[2025-02-11 14:53:53] Plumbing command codeql database interpret-results completed.
[2025-02-11 14:53:53] Exiting with code 0
